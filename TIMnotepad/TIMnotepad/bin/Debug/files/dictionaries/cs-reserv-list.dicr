abstract
as
base
bool
break
byte
case
catch
char
checked
class
const
continue
decimal
decimal[]
defult
delegate
do
double
double[]
else
enum
event
explicit
extern
false
finally
fixed
float
float[]
for
foreach
goto
if
implicit
in
int
Int32
Int64
Int16
int[]
intrface
internal
is
lock
long
long[]
namespace
new
null
object
operator
out
override
params
private
protected
public
readonly
ref
return
sbyte
sbyte[]
sealed
short
short[]
sizeof
stackalloc
static
string
single
single[]
string[]
struct
switch
this
throw
true
try
typeof
uint
uint[]
ulong
ulong[]
unchecked
unsafe
ushort
ushort[]
using
virtual
void
volatile
while
add
alias
ascending
async
await
by
descending
dynamic
equals
from
get
global
group
into
join
let
nameof
notnull
on
orderby
object
partial
remove
select
set
unmanaged
value
var
when
where
with
yield
Console
Console.WriteLine
Console.Write
Console.ReadLine
Console.ReadKey
Console.Clear
Console.ForegroundColor
Console.BackgroundColor
ConsoleColor
ArrayList
Trim
ToUpper
ToLower
Substring
Split
Replace
LastIndexOf
Join
Insert
IndexOf
EndsWith
StartsWith
Contains
DateTIme
DateTIme.Now
DateTIme.UtcNow
DateTIme.Today
Math
Math.Abs
Math.Acos
Math.BigMul
Math.Ceiling
Math.DivRem
Math.Cos
Math.Cosh
Math.Exp
Math.Floor
Math.IEEERemainder
Math.Log
Math.Log10
Math.Max
Math.Min
Math.Pow
Math.Round
Math.Sign
Math.Sin
Math.Sinh
Math.Sqrt
Math.Tan
Math.Tanh
Math.Truncate
Convert
Convert.ToString
Convert.ToBaseString64
Convert.ToBoolean
Convert.ToByte
Convert.ToChar
Convert.ToDateTime
Convert.ToDecimal
Convert.ToDouble
Convert.ToInt16
Convert.ToInt32
Convert.ToInt64
Convert.ToSByte
Convert.ToSingle
Convert.ToUInt16
Convert.ToUInt32
Convert.ToUInt64
Length
this